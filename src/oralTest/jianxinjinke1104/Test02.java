package oralTest.jianxinjinke1104;

public class Test02 {
    public double getExpect(int n){
        double[] dp = new double[n + 1];
        dp[0] = 0;
        dp[1] = 1;
        dp[2] = 1;
        for(int i = 3; i <= n; i++){
            dp[i] = (2.0 / (double) n) * dp[i - 2] + ((double)(n - 2) / (double) n) * dp[i - 3];
        }
        return dp[n];
    }
}
/*
小红拿到了一个链表。她每次操作会随机选择一个节点，将该节点、该节点下一个节点和该节点上一个节点同时删除。请注意，如果选择的节点是头节点，则不存在上一个节点，若是尾节点，则不存在下一个节点。

小红希望你计算将链表删成空链表的操作次数的期望 1<=n<=10^5

如果你返回的答案和正确答案的相对误差不超过10^-3，则认为你的答案正确。

示例1

输入

3

输出

1.66666667

说明

如果第一次击打最左边或者最右边的弹珠，则还需要一次击打。

如果第一次击打中间的弹珠，则直接打出全部弹珠。答案是1/3* 1+2/3*2=5/3

思路与代码

直接使用动态规划的方式计算了一个级数的期望值，并在最后将结果以8位小数的形式打印出来。
 */
